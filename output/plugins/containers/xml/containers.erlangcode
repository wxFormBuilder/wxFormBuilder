<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--
wxFormBuilder - A Visual Dialog Editor for wxWidgets.
Copyright (C) 2005 José Antonio Hurtado

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Written by
  José Antonio Hurtado - joseantonio.hurtado@gmail.com
  Juan Antonio Ortega  - jortegalalmolda@gmail.com

Erlang code generation writen by
  Micheus Vieira - micheus@gmail.com
-->
<codegen language="Erlang">

	<templates class="wxPanel">
		<template name="construction">
            $name = #class:new(#wxparent $name, [#ifnotnull $id
                                                 @{ #ifnotequal $id "wxID_ANY"
                                                    @{{winid, $id }, @} @}
                                                 #ifnotnull $pos
                                                 @{{pos, $pos }, @}
                                                 #ifnotnull $size
                                                 @{{size, $size }, @}
                                                 #ifnotnull $window_style
                                                 @{{style, $window_style }@}]),
        </template>
	</templates>

	<templates class="wxCollapsiblePane">
		<template name="construction">
            $name = #class:new(#wxparent $name, [#ifnotnull $id
                                                 @{ #ifnotequal $id "wxID_ANY"
                                                    @{{winid, $id }, @} @}
                                                 #ifnotnull $label
                                                 @{{label, $label }, @}
                                                 #ifnotnull $pos
                                                 @{{pos, $pos }, @}
                                                 #ifnotnull $size
                                                 @{{size, $size }, @}
                                                 #ifnotnull $style
                                                 @{{style, $style #ifnotnull $window_style @{ | $window_style @}}@}
                                                 #ifnull $style
                                                 @{ #ifnotnull $window_style
                                                    @{{style, $window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
		<template name="settings">
		    #ifnotnull $collapsed
		    @{ %% #class:collapse($name, $collapsed) is not supported by Erlang @}
        </template>
		<template name="evt_connect_OnCollapsiblePaneChanged">#class:connect($name, wxEVT_COLLAPSIBLEPANE_CHANGED, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
	</templates>

	<templates class="wxSplitterWindow">
		<template name="construction">
            $name = #class:new(#wxparent $name, [#ifnotnull $id
                                                 @{ #ifnotequal $id "wxID_ANY"
                                                    @{{id, $id }, @} @}
                                                 #ifnotnull $pos
                                                 @{{pos, $pos }, @}
                                                 #ifnotnull $size
                                                 @{{size, $size }, @}
                                                 #ifnotnull $style
                                                 @{{style, $style #ifnotnull $window_style @{ | $window_style @}}@}
                                                 #ifnull $style
                                                 @{ #ifnotnull $window_style
                                                    @{{style, $window_style } @}@}]),
        </template>
		<template name="settings">
			#ifnotnull $sashgravity
			@{ #ifnotequal $sashgravity "0.0"
			   @{ #class:setSashGravity($name, $sashgravity), @} @}
			#ifnotnull $sashsize
			@{ #ifnotequal $sashsize "-1"
			   @{ #class:setSashSize($name, $sashsize), @} @}
			#ifnotnull $sashpos
			@{ #ifnotequal $sashpos "-1"
			   @{ #nl #class:connect(?wxEVT_IDLE, $name #append _on_idle), @} @}
			#ifnotnull $min_pane_size
			@{ #ifnotequal $min_pane_size "0"
			   @{ #class:setMinimumPaneSize($name, $min_pane_size), @} @}
		</template>
		<template name="generated_event_handlers">
			#ifnotnull $sashpos
			@{
				#ifnotequal $sashpos "-1"
				@{
					function $name #append OnIdle(event) #indent #nl
						#class:setSashPosition($sashpos),
						#class:disconnect(wxEVT_IDLE),  #unindent #nl end
				@}
			@}
		</template>
		<template name="evt_connect_OnSplitterSashPosChanging">#class:connect($name, wxEVT_COMMAND_SPLITTER_SASH_POS_CHANGING, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnSplitterSashPosChanged">#class:connect($name, wxEVT_COMMAND_SPLITTER_SASH_POS_CHANGED, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnSplitterUnsplit">#class:connect($name, wxEVT_COMMAND_SPLITTER_UNSPLIT, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnSplitterDClick">#class:connect($name, wxEVT_COMMAND_SPLITTER_DOUBLECLICKED, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
	</templates>


	<templates class="wxNotebook">
		<template name="construction">
		    $name = #class:new(#wxparent $name, $id, [#ifnotnull $pos
                                                      @{{pos, $pos }, @}
                                                      #ifnotnull $size
                                                      @{{size, $size }, @}
                                                      #ifnotnull $style
                                                      @{{style, $style #ifnotnull $window_style @{ | $window_style @}}@}
                                                      #ifnull $style
                                                      @{ #ifnotnull $window_style
                                                         @{{style, $window_style } @}@}]),
        </template>
		<template name="settings">
			#ifnotnull $bitmapsize
			@{
				{$name #append _ImgW, $name #append _ImgH} = $bitmapsize, #nl
				$name #append _Imgs = wxImageList:new($name #append _ImgW, $name #append _ImgH), #nl
				#class:assignImageList($name, $name #append _Imgs),
			@}
		</template>
		<template name="evt_connect_OnNotebookPageChanged">#class:connect($name, wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnNotebookPageChanging">#class:connect($name, wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
	</templates>

	<templates class="notebookpage">
		<template name="page_add">
		    wxNotebook:addPage(#parent $name, #child$name, $label #ifnotequal $select "0" @{, [{bSelect, $select }]@}),
			#ifnotnull #parent $bitmapsize
			@{ #ifnotnull $bitmap
               @{ #nl
                  wxImageList:add(#parent $name #append _Imgs, $bitmap), #nl
                  wxNotebook:setPageImage(#parent $name, wxNotebook:getRowCount(#parent $name)-1, wxImageList:getImageCount(#parent $name #append _Imgs)-1), @}
			@}
        </template>
	</templates>

	<templates class="wxListbook">
		<template name="construction">
		    $name = #class:new(#wxparent $name, $id, [#ifnotnull $pos
                                                      @{{pos, $pos }, @}
                                                      #ifnotnull $size
                                                      @{{size, $size }, @}
                                                      #ifnotnull $style
                                                      @{{style, $style #ifnotnull $window_style @{ | $window_style @}}@}
                                                      #ifnull $style
                                                      @{ #ifnotnull $window_style
                                                         @{{style, $window_style } @}@}]),
        </template>
		<template name="settings">
			#ifnotnull $bitmapsize
			@{
				{$name #append _ImgW, $name #append _ImgH} = $bitmapsize, #nl
				$name #append _Imgs = wxImageList:new($name #append _ImgW, $name #append _ImgH), #nl
				#class:assignImageList($name, $name #append _Imgs),
			@}
		</template>
		<template name="evt_connect_OnListbookPageChanged">#class:connect($name, wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnListbookPageChanging">#class:connect($name, wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
	</templates>

	<templates class="listbookpage">
		<template name="page_add">
		    wxListbook:addPage(#parent $name, #child $name, $label #ifnotequal $select "0" @{, [{bSelect, $select }]@}),
			#ifnotnull #parent $bitmapsize
			@{ #ifnotnull $bitmap
               @{ #nl
                  wxImageList:add(#parent $name #append _Imgs, $bitmap), #nl
                  wxListbook:setPageImage(#parent $name, wxListbook:getPageCount(#parent $name)-1, wxImageList:getImageCount(#parent $name #append _Imgs)-1), @}
			@}
        </template>
	</templates>

	<templates class="wxChoicebook">
		<template name="construction">
		    $name = #class:new(#wxparent $name, $id, [#ifnotnull $pos
                                                      @{{pos, $pos }, @}
                                                      #ifnotnull $size
                                                      @{{size, $size }, @}
                                                      #ifnotnull $style
                                                      @{{style, $style #ifnotnull $window_style @{ | $window_style @}}@}
                                                      #ifnull $style
                                                      @{ #ifnotnull $window_style
                                                         @{{style, $window_style } @}@}]),
        </template>
		<template name="evt_connect_OnChoicebookPageChanged">#class:connect($name, wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnChoicebookPageChanging">#class:connect($name, wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
	</templates>

	<templates class="choicebookpage">
		<template name="page_add">
		    wxChoicebook:addPage(#parent $name, #child$name, $label #ifnotequal $select "0" @{, [{bSselect, $select }]@}),
        </template>
	</templates>

	<templates class="wxSimplebook">
		<template name="construction">
		    $name = #class( #wxparent $name, $id, $pos, $size, $window_style #ifnotnull $window_name @{, $window_name @}),
        </template>
		<template name="evt_connect_OnSimplebookPageChanged">#class:connect($name, wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGED, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnSimplebookPageChanging">#class:connect($name, wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGING, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
	</templates>

	<templates class="simplebookpage">
		<template name="page_add">
		    wxSimplebook:addPage(#parent $name, #child$name, $label #ifnotequal $select "0" @{, [{bSelect, $select }]@}),
        </template>
	</templates>

	<templates class="wxAuiNotebook">
		<template name="construction">
		    $name = #class:new(#wxparent $name, [#ifnotnull $pos
                                                 @{{pos, $pos }, @}
                                                 #ifnotnull $size
                                                 @{{size, $size }, @}
                                                 #ifnotnull $style
                                                 @{{style, $style #ifnotnull $window_style @{ | $window_style @}}@}
                                                 #ifnull $style
                                                 @{ #ifnotnull $window_style
                                                    @{{style, $window_style } @}@}]),
        </template>
		<template name="include"/><!--import aui</template>	-->
		<template name="evt_connect_OnAuiNotebookPageClose">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_PAGE_CLOSE, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookPageClosed">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_PAGE_CLOSED, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookPageChanged">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_PAGE_CHANGED, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookPageChanging">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_PAGE_CHANGING, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookButton">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_BUTTON, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookBeginDrag">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_BEGIN_DRAG, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookEndDrag">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_END_DRAG, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookDragMotion">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_DRAG_MOTION, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookAllowDND">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_ALLOW_DND, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookDragDone">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_DRAG_DONE, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookTabMiddleDown">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_TAB_MIDDLE_DOWN, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookTabMiddleUp">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_TAB_MIDDLE_UP, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookTabRightDown">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_TAB_RIGHT_DOWN, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookTabRightUp">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_TAB_RIGHT_UP, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
		<template name="evt_connect_OnAuiNotebookBGDClick">#class:connect($name, wxaui.wxEVT_COMMAND_AUINOTEBOOK_BG_DCLICK, function(event)#nl %% implements  #handler#nl #skip #nl end),</template>
	</templates>

	<templates class="auinotebookpage">
		<template name="page_add">
		   #ifnotequal $select "0"
		   @{ wxAuiNotebook:addPage(#parent $name, #child $name, $label, [{select, $select } #ifnotnull $bitmap
		                                                                                      @{, {bitmap, $bitmap }@}]), @}
		   #ifequal $select "0"
		   @{ wxAuiNotebook:addPage(#parent $name, #child $name, $label #ifnotnull $bitmap @{, [{bitmap, $bitmap }]@}), @}
        </template>
	</templates>

	<templates class="wxScrolledWindow">
		<template name="construction">
            $name = #class:new(#wxparent $name, [#ifnotnull $id
                                                 @{ #ifnotequal $id "wxID_ANY"
                                                    @{{winid, $id }, @} @}
                                                 #ifnotnull $pos
                                                 @{{pos, $pos }, @}
                                                 #ifnotnull $size
                                                 @{{size, $size }, @}
                                                 #ifnotnull $window_style
                                                 @{{style, $window_style }@}]),
		</template>
		<template name="settings">
			 #class:setScrollRate($name, $scroll_rate_x, $scroll_rate_y),
        </template>
	</templates>

</codegen>
