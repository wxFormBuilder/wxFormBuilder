<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--
wxFormBuilder - A Visual Dialog Editor for wxWidgets.
Copyright (C) 2005 José Antonio Hurtado

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Written by
  José Antonio Hurtado - joseantonio.hurtado@gmail.com
  Juan Antonio Ortega  - jortegalalmolda@gmail.com
-->
<package name="Data" lib="libadditional" icon="grid.xpm" desc="Data manipulation controls">

<objectinfo class="wxTreeCtrl" icon="tree_ctrl.xpm" type="widget">
	<inherits class="wxTreeCtrlBase" />
	<inherits class="wxWindow" />
	<inherits class="AUI" />
	<property name="name" type="text">m_treeCtrl</property>
	<property name="style" type="bitlist">
		<option name="wxTR_EDIT_LABELS"             help="Use this style if you wish the user to be able to edit labels in the tree control." />
		<option name="wxTR_NO_BUTTONS"              help="For convenience to document that no buttons are to be drawn." />
		<option name="wxTR_HAS_BUTTONS"             help="Use this style to show + and - buttons to the left of parent items." />
		<option name="wxTR_TWIST_BUTTONS"           help="Selects alternative style of +/- buttons and shows rotating (&quot;twisting&quot;) arrows instead. Currently this style is only implemented under Microsoft Windows Vista and later Windows versions and is ignored under the other platforms. Notice that under Vista this style results in the same appearance as used by the tree control in Explorer and other built-in programs and so using it may be preferable to the default style." />
		<option name="wxTR_NO_LINES"                help="Use this style to hide vertical level connectors." />
		<option name="wxTR_FULL_ROW_HIGHLIGHT"      help="Use this style to have the background colour and the selection highlight extend over the entire horizontal row of the tree control window. (This flag is ignored under Windows unless you specify wxTR_NO_LINES as well.)" />
		<option name="wxTR_LINES_AT_ROOT"           help="Use this style to show lines between root nodes. Only applicable if wxTR_HIDE_ROOT is set and wxTR_NO_LINES is not set." />
		<option name="wxTR_HIDE_ROOT"               help="Use this style to suppress the display of the root node, effectively causing the first-level nodes to appear as a series of root nodes." />
		<option name="wxTR_ROW_LINES"               help="Use this style to draw a contrasting border between displayed rows." />
		<option name="wxTR_HAS_VARIABLE_ROW_HEIGHT" help="Use this style to cause row heights to be just big enough to fit the content. If not set, all rows use the largest row height. The default is that this flag is unset. Generic only." />
		<option name="wxTR_SINGLE"                  help="For convenience to document that only one item may be selected at a time. Selecting another item causes the current selection, if any, to be deselected. This is the default." />
		<option name="wxTR_MULTIPLE"                help="Use this style to allow a range of items to be selected. If a second range is selected, the current range, if any, is deselected." />
		<option name="wxTR_DEFAULT_STYLE"           help="The set of flags that are closest to the defaults for the native control for a particular toolkit." />wxTR_DEFAULT_STYLE</property>
	<event name="OnTreeGetInfo" class="wxTreeEvent" help="Request information from the application." />
	<event name="OnTreeSetInfo" class="wxTreeEvent" help="Information is being supplied." />
	<event name="OnTreeItemGetTooltip" class="wxTreeEvent" help="The opportunity to set the item tooltip is being given to the application (call wxTreeEvent::SetToolTip). Windows only." />
	<event name="OnTreeStateImageClick" class="wxTreeEvent" help="The state image has been clicked. Windows only." />
</objectinfo>

<objectinfo class="wxGrid" icon="grid.xpm" type="widget">
	<inherits class="wxWindow" />
	<inherits class="AUI" />
	<property name="name" type="text">m_grid</property>
	<category name="Grid">
		<property name="rows" type="uint" help="Number of Rows.">5</property>
		<property name="cols" type="uint" help="Number of Columns.">5</property>
		<property name="editing" type="bool" help="Allow editing grid contents.">1</property>
		<property name="grid_lines" type="bool" help="Show grid lines.">1</property>
		<property name="grid_line_color" type="wxColour" help="The colour used to draw grid lines."/>
		<property name="drag_grid_size" type="bool" help="Allow sizing rows and columns by dragging gridlines.">0</property>
		<property name="margin_width" type="uint" help="A grid may occupy more space than needed for its columns. This function allows to set how big this extra space is.">0</property>
		<property name="margin_height" type="uint" help="A grid may occupy more space than needed for its rows. This function allows to set how big this extra space is.">0</property>
	</category>
	<category name="Columns">
		<property name="column_sizes" type="uintlist" help="Comma separated list of column sizes. Note: wxGrid sets up arrays to store individual row and column sizes when non-default sizes are used. The memory requirements for this could become prohibitive if your grid is very large."/>
		<property name="autosize_cols" type="bool" help="Automatically sizes all columns to fit their contents. wxGrid sets up arrays to store individual row and column sizes when non-default sizes are used. The memory requirements for this could become prohibitive if your grid is very large.">0</property>
		<property name="drag_col_move" type="bool" help="Allow moving columns by dragging.">0</property>
		<property name="drag_col_size" type="bool" help="Allow sizing columns by dragging.">1</property>
		<property name="col_label_size" type="uint" help="Height of column labels">30</property>
		<property name="col_label_values" type="stringlist" help="List of column labels."></property>
		<property name="col_label_horiz_alignment" type="option" help="Horizontal alignment of column label text.">
			<option name="wxALIGN_LEFT" 	help="Align labels left."/>
			<option name="wxALIGN_CENTER" 	help="Align labels centered."/>
			<option name="wxALIGN_RIGHT" 	help="Align labels right."/>
			wxALIGN_CENTER
		</property>
		<property name="col_label_vert_alignment" type="option" help="Vertical alignment of column label text.">
			<option name="wxALIGN_TOP" 	help="Align labels top."/>
			<option name="wxALIGN_CENTER" 	help="Align labels centered."/>
			<option name="wxALIGN_BOTTOM" 	help="Align labels bottom."/>
			wxALIGN_CENTER
		</property>
	</category>
	<category name="Rows">
		<property name="row_sizes" type="uintlist" help="Comma separated list of row sizes. Note: wxGrid sets up arrays to store individual row and column sizes when non-default sizes are used. The memory requirements for this could become prohibitive if your grid is very large."/>
		<property name="autosize_rows" type="bool" help="Automatically sizes all rows to fit their contents. wxGrid sets up arrays to store individual row and column sizes when non-default sizes are used. The memory requirements for this could become prohibitive if your grid is very large.">0</property>
		<property name="drag_row_size" type="bool" help="Allow sizing rows by dragging.">1</property>
		<property name="row_label_size" type="uint" help="Width of row labels">80</property>
		<property name="row_label_values" type="stringlist" help="List of row labels."></property>
		<property name="row_label_horiz_alignment" type="option" help="Horizontal alignment of row label text.">
			<option name="wxALIGN_LEFT" 	help="Align labels left."/>
			<option name="wxALIGN_CENTER" 	help="Align labels centered."/>
			<option name="wxALIGN_RIGHT" 	help="Align labels right."/>
			wxALIGN_CENTER
		</property>
		<property name="row_label_vert_alignment" type="option" help="Vertical alignment of row label text.">
			<option name="wxALIGN_TOP" 	help="Align labels top."/>
			<option name="wxALIGN_CENTER" 	help="Align labels centered."/>
			<option name="wxALIGN_BOTTOM" 	help="Align labels bottom."/>
			wxALIGN_CENTER
		</property>
	</category>
		<category name="Label Appearance">
		<property name="label_bg" type="wxColour" help="Background color for row and column labels."/>
		<property name="label_font" type="wxFont" help="Font for row and column labels."/>
		<property name="label_text" type="wxColour" help="Colour for row and column label text."/>
	</category>
	<category name="Cell Defaults">
		<property name="cell_bg" type="wxColour" help="Default cell background color."/>
		<property name="cell_font" type="wxFont" help="Default cell font."/>
		<property name="cell_text" type="wxColour" help="Default cell text color."/>
		<property name="cell_horiz_alignment" type="option" help="Default horizontal alignment of cell values.">
			<option name="wxALIGN_LEFT" 	help="Align left."/>
			<option name="wxALIGN_CENTER" 	help="Align centered."/>
			<option name="wxALIGN_RIGHT" 	help="Align right."/>
			wxALIGN_LEFT
		</property>
		<property name="cell_vert_alignment" type="option" help="Default vertical alignment of cell values.">
			<option name="wxALIGN_TOP" 	help="Align top."/>
			<option name="wxALIGN_CENTER" 	help="Align centered."/>
			<option name="wxALIGN_BOTTOM" 	help="Align bottom."/>
			wxALIGN_TOP
		</property>
	</category>
	<event name="OnGridCellLeftClick" class="wxGridEvent" help="The user clicked a cell with the left mouse button. Processes a wxEVT_GRID_CELL_LEFT_CLICK." />
	<event name="OnGridCellRightClick" class="wxGridEvent" help="The user clicked a cell with the right mouse button. Processes a wxEVT_GRID_CELL_RIGHT_CLICK." />
	<event name="OnGridCellLeftDClick" class="wxGridEvent" help="The user double-clicked a cell with the left mouse button. Processes a wxEVT_GRID_CELL_LEFT_DCLICK." />
	<event name="OnGridCellRightDClick" class="wxGridEvent" help="The user double-clicked a cell with the right mouse button. Processes a wxEVT_GRID_CELL_RIGHT_DCLICK." />
	<event name="OnGridLabelLeftClick" class="wxGridEvent" help="The user clicked a label with the left mouse button. Processes a wxEVT_GRID_LABEL_LEFT_CLICK." />
	<event name="OnGridLabelRightClick" class="wxGridEvent" help="The user clicked a label with the right mouse button. Processes a wxEVT_GRID_LABEL_RIGHT_CLICK." />
	<event name="OnGridLabelLeftDClick" class="wxGridEvent" help="The user double-clicked a label with the left mouse button. Processes a wxEVT_GRID_LABEL_LEFT_DCLICK." />
	<event name="OnGridLabelRightDClick" class="wxGridEvent" help="The user double-clicked a label with the right mouse button. Processes a wxEVT_GRID_LABEL_RIGHT_DCLICK." />
	<event name="OnGridCellChange" class="wxGridEvent" help="The user changed the data in a cell. Processes a wxEVT_GRID_CELL_CHANGED." />
	<event name="OnGridSelectCell" class="wxGridEvent" help="The user moved to, and selected a cell. Processes a wxEVT_GRID_SELECT_CELL." />
	<event name="OnGridEditorHidden" class="wxGridEvent" help="The editor for a cell was hidden. Processes a wxEVT_GRID_EDITOR_HIDDEN." />
	<event name="OnGridEditorShown" class="wxGridEvent" help="The editor for a cell was shown. Processes a wxEVT_GRID_EDITOR_SHOWN." />
	<event name="OnGridCmdCellLeftClick" class="wxGridEvent" help="The user clicked a cell with the left mouse button; variant taking a window identifier. Processes a wxEVT_GRID_CELL_LEFT_CLICK." />
	<event name="OnGridCmdCellRightClick" class="wxGridEvent" help="The user clicked a cell with the right mouse button; variant taking a window identifier. Processes a wxEVT_GRID_CELL_RIGHT_CLICK." />
	<event name="OnGridCmdCellLeftDClick" class="wxGridEvent" help="The user double-clicked a cell with the left mouse button; variant taking a window identifier. Processes a wxEVT_GRID_CELL_LEFT_DCLICK." />
	<event name="OnGridCmdCellRightDClick" class="wxGridEvent" help="The user double-clicked a cell with the right mouse button; variant taking a window identifier. Processes a wxEVT_GRID_CELL_RIGHT_DCLICK." />
	<event name="OnGridCmdLabelLeftClick" class="wxGridEvent" help="The user clicked a label with the left mouse button; variant taking a window identifier. Processes a wxEVT_GRID_LABEL_LEFT_CLICK" />
	<event name="OnGridCmdLabelRightClick" class="wxGridEvent" help="The user clicked a label with the right mouse button; variant taking a window identifier. Processes a wxEVT_GRID_LABEL_RIGHT_CLICK." />
	<event name="OnGridCmdLabelLeftDClick" class="wxGridEvent" help="The user double-clicked a label with the left mouse button; variant taking a window identifier. Processes a wxEVT_GRID_LABEL_LEFT_DCLICK." />
	<event name="OnGridCmdLabelRightDClick" class="wxGridEvent" help="The user double-clicked a label with the right mouse button; variant taking a window identifier. Processes a wxEVT_GRID_LABEL_RIGHT_DCLICK." />
	<event name="OnGridCmdCellChange" class="wxGridEvent" help="The user changed the data in a cell; variant taking a window identifier. Processes a wxEVT_GRID_CELL_CHANGED." />
	<event name="OnGridCmdSelectCell" class="wxGridEvent" help="The user moved to, and selected a cell; variant taking a window identifier. Processes a wxEVT_GRID_SELECT_CELL." />
	<event name="OnGridCmdEditorHidden" class="wxGridEvent" help="The editor for a cell was hidden; variant taking a window identifier. Processes a wxEVT_GRID_EDITOR_HIDDEN." />
	<event name="OnGridCmdEditorShown" class="wxGridEvent" help="The editor for a cell was shown; variant taking a window identifier. Processes a wxEVT_GRID_EDITOR_SHOWN." />
	<event name="OnGridColSize" class="wxGridSizeEvent" help="The user resized a column by dragging it. Processes a wxEVT_GRID_COL_SIZE." />
	<event name="OnGridRowSize" class="wxGridSizeEvent" help="The user resized a row by dragging it. Processes a wxEVT_GRID_ROW_SIZE." />
	<event name="OnGridCmdColSize" class="wxGridSizeEvent" help="The user resized a column by dragging it; variant taking a window identifier. Processes a wxEVT_GRID_COL_SIZE." />
	<event name="OnGridCmdRowSize" class="wxGridSizeEvent" help="The user resized a row by dragging it; variant taking a window identifier. Processes a wxEVT_GRID_ROW_SIZE." />
	<event name="OnGridRangeSelect" class="wxGridRangeSelectEvent" help="The user selected a group of contiguous cells. Processes a wxEVT_GRID_RANGE_SELECT." />
	<event name="OnGridCmdRangeSelect" class="wxGridRangeSelectEvent" help="The user selected a group of contiguous cells; variant taking a window identifier. Processes a wxEVT_GRID_RANGE_SELECT." />
	<event name="OnGridEditorCreated" class="wxGridEditorCreatedEvent" help="The editor for a cell was created. Processes a wxEVT_GRID_EDITOR_CREATED." />
	<event name="OnGridCmdEditorCreated" class="wxGridEditorCreatedEvent" help="The editor for a cell was created; variant taking a window identifier. Processes a wxEVT_GRID_EDITOR_CREATED." />
</objectinfo>

<objectinfo class="wxCheckListBox" icon="checklistbox.xpm" type="widget">
	<inherits class="wxWindow" />
	<inherits class="AUI" />
	<inherits class="Validator" />
	<property name="name" type="text">m_checkList</property>
	<property name="style" type="bitlist">
		<option name="wxLB_SINGLE"    help="Single-selection list." />
		<option name="wxLB_MULTIPLE"  help="Multiple-selection list: the user can toggle multiple items on and off." />
		<option name="wxLB_EXTENDED"  help="Extended-selection list: the user can select multiple items using the SHIFT key and the mouse or special key combinations." />
		<option name="wxLB_HSCROLL"   help="Create horizontal scrollbar if contents are too wide (Windows only)." />
		<option name="wxLB_ALWAYS_SB" help="Always show a vertical scrollbar." />
		<option name="wxLB_NEEDED_SB" help="Only create a vertical scrollbar if needed." />
		<option name="wxLB_NO_SB"     help="Don't create vertical scrollbar (wxMSW only)." />
		<option name="wxLB_SORT"      help="The listbox contents are sorted in alphabetical order." /></property>
	<property name="choices" type="stringlist" help="List of default values." />
	<event name="OnCheckListBoxToggled" class="wxCommandEvent" help="Process a wxEVT_COMMAND_CHECKLISTBOX_TOGGLED event, when an item in the check list box is checked or unchecked." />
	<event name="OnCheckListBox" class="wxCommandEvent" help="Process a wxEVT_COMMAND_LISTBOX_SELECTED event, when an item on the list is selected." />
	<event name="OnCheckListBoxDClick" class="wxCommandEvent" help="Process a wxEVT_COMMAND_LISTBOX_DOUBLECLICKED event, when the listbox is double-clicked." />
</objectinfo>

<objectinfo class="wxTreeListCtrl" icon="treelistctrl.xpm" type="treelistctrl" startgroup="1">
	<inherits class="wxWindow"/>
	<inherits class="AUI"/>
	<property name="name" type="text">m_treeListCtrl</property>
	<property name="style" type="bitlist">
		<option name="wxTL_SINGLE" help="Single selection, this is the default."/>
		<option name="wxTL_MULTIPLE" help="Allow multiple selection."/>
		<option name="wxTL_CHECKBOX" help="Show the usual, 2 state, checkboxes for the items in the first column."/>
		<option name="wxTL_3STATE" help="Show the checkboxes that can possibly be set by the program, but not the user, to a third, undetermined, state, for the items in the first column. Implies wxTL_CHECKBOX."/>
		<option name="wxTL_USER_3STATE" help="Same as wxTL_3STATE but the user can also set the checkboxes to the undetermined state. Implies wxTL_3STATE."/>
		<option name="wxTL_DEFAULT_STYLE" help="Style used by the control by default, just wxTL_SINGLE currently."/>
		wxTL_DEFAULT_STYLE
	</property>
	<event name="OnTreelistSelectionChanged" class="wxTreeListEvent" help="Process wxEVT_TREELIST_SELECTION_CHANGED event and notifies about the selection change in the control. In the single selection case the item indicated by the event has been selected and previously selected item, if any, was deselected. In multiple selection case, the selection of this item has just changed (it may have been either selected or deselected) but notice that the selection of other items could have changed as well, use wxTreeListCtrl::GetSelections() to retrieve the new selection if necessary." />
	<event name="OnTreelistItemExpanding" class="wxTreeListEvent" help="Process wxEVT_TREELIST_ITEM_EXPANDING event notifying about the given branch being expanded. This event is sent before the expansion occurs and can be vetoed to prevent it from happening." />
	<event name="OnTreelistItemExpanded" class="wxTreeListEvent" help="Process wxEVT_TREELIST_ITEM_EXPANDED event notifying about the expansion of the given branch. This event is sent after the expansion occurs and can't be vetoed." />
	<event name="OnTreelistItemChecked" class="wxTreeListEvent" help="Process wxEVT_TREELIST_ITEM_CHECKED event notifying about the user checking or unchecking the item. You can use wxTreeListCtrl::GetCheckedState() to retrieve the new item state and wxTreeListEvent::GetOldCheckedState() to get the previous one." />
	<event name="OnTreelistItemActivated" class="wxTreeListEvent" help="Process wxEVT_TREELIST_ITEM_ACTIVATED event notifying about the user double clicking the item or activating it from keyboard." />
	<event name="OnTreelistItemContextMenu" class="wxTreeListEvent" help="Process wxEVT_TREELIST_ITEM_CONTEXT_MENU event indicating that the popup menu for the given item should be displayed." />
	<event name="OnTreelistColumnSorted" class="wxTreeListEvent" help="Process wxEVT_TREELIST_COLUMN_SORTED event indicating that the control contents has just been resorted using the specified column. The event doesn't carry the sort direction, use GetSortColumn() method if you need to know it." />
</objectinfo>

<objectinfo class="wxTreeListCtrlColumn" icon="treelistctrlcolumn.xpm" type="treelistctrlcolumn">
	<property name="name" type="wxString_i18n" help="The column label.">Column</property>
	<property name="width" type="editoption" help="The width of the column in pixels or the special wxCOL_WIDTH_AUTOSIZE value indicating that the column should adjust to its contents. Notice that the first column is special and will be always resized to fill all the space not taken by the other columns, i.e. the width specified here is ignored for it.">
		<option name="wxCOL_WIDTH_DEFAULT" 	help="Special value used for column width meaning unspecified or default."/>
		<option name="wxCOL_WIDTH_AUTOSIZE" help="Size the column automatically to fit all values.

Note:
On OS X, this style is only implemented in the Cocoa build on OS X >= 10.5; it behaves identically to wxCOL_WIDTH_DEFAULT otherwise."/>
		wxCOL_WIDTH_DEFAULT
	</property>
	<property name="alignment" type="option" help="Alignment of both the column header and its items.">
		<option name="wxALIGN_LEFT" 				help="Align the item to the left."/>
		<option name="wxALIGN_RIGHT" 				help="Align the item to the right."/>
		<option name="wxALIGN_CENTER" 			help="Align the item to the center."/>
		wxALIGN_LEFT
	</property>
	<property name="flag" type="bitlist">
		<option name="wxCOL_RESIZABLE" help="Column can be resized (included in default flags)."/>
		<option name="wxCOL_SORTABLE" help="Column can be clicked to toggle the sort order by its contents."/>
    <option name="wxCOL_REORDERABLE" help="Column can be dragged to change its order (included in default)."/>
    <option name="wxCOL_HIDDEN" help="Column is not shown at all."/>
		wxCOL_RESIZABLE
	</property>
</objectinfo>

<objectinfo class="wxDataViewCtrl" icon="dataviewtree_ctrl.xpm" startgroup="1" type="dataviewctrl" wxversion="2904" >
	<inherits class="wxControl" />
	<inherits class="wxWindow" />
	<property name="name" type="text">m_dataViewCtrl</property>
	<property name="style" type="bitlist">
		<option name="wxDV_SINGLE" help="Single selection mode. This is the default." />
		<option name="wxDV_MULTIPLE" help="Multiple selection mode." />
		<option name="wxDV_ROW_LINES" help="Use alternating colours for rows if supported by platform and theme. Currently only supported by the native GTK and OS X implementations but not by the generic one." />
		<option name="wxDV_HORIZ_RULES" help="Display the separator lines between rows" />
		<option name="wxDV_VERT_RULES" help="Display the separator lines between columns." />
		<option name="wxDV_VARIABLE_LINE_HEIGHT" help="Allow variable line heights. This can be inefficient when displaying large number of items." />
		<option name="wxDV_NO_HEADER" help="Do not show column headers (which are shown by default)." />
	</property>
	<template name="generated_event_handlers"></template>
	<event name="OnDataViewCtrlSelectionChanged" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_SELECTION_CHANGED event." />
	<event name="OnDataViewCtrlItemActivated" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_ACTIVATED event. This event is triggered by double clicking an item or pressing some special key (usually 'Enter') when it is focused." />
	<event name="OnDataViewCtrlItemStartEditing" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_START_EDITING event. This event can be vetoed in order to prevent editing on an item by item basis." />
	<event name="OnDataViewCtrlItemEditingStarted" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EDITING_STARTED event." />
	<event name="OnDataViewCtrlItemEditingDone" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EDITING_DONE event." />
	<event name="OnDataViewCtrlItemCollapsing" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_COLLAPSING event." />
	<event name="OnDataViewCtrlItemCollapsed" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_COLLAPSED event." />
	<event name="OnDataViewCtrlItemExpanding" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EXPANDING event." />
	<event name="OnDataViewCtrlItemExpanded" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EXPANDED event." />
	<event name="OnDataViewCtrlItemValueChanged" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_VALUE_CHANGED event" />
	<event name="OnDataViewCtrlItemContextMenu" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_CONTEXT_MENU event generated when the user right clicks inside the control. Notice that this menu is generated even if the click didn't occur on any valid item, in this case wxDataViewEvent::GetItem() simply returns an invalid item." />
	<event name="OnDataViewCtrlColumnHeaderClick" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_HEADER_CLICK event." />
	<event name="OnDataViewCtrlColumnHeaderRightClick" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_HEADER_RIGHT_CLICK event. Notice that currently this event is not generated in the native OS X versions of the control." />
	<event name="OnDataViewCtrlColumnSorted" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_SORTED event." />
	<event name="OnDataViewCtrlColumnReordered" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_REORDERED event." />
	<event name="OnDataViewCtrlItemBeginDrag" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_BEGIN_DRAG event." />
	<event name="OnDataViewCtrlItemDropPossible" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE event." />
	<event name="OnDataViewCtrlItemDrop" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_DROP event." />
</objectinfo>

<objectinfo class="wxDataViewTreeCtrl"  icon="dataviewtree_ctrl.xpm" type="dataviewtreectrl" wxversion="2904" >
	<inherits class="wxControl" />
	<inherits class="wxWindow" />
	<property name="name" type="text">m_dataViewTreeCtrl</property>
	<property name="style" type="bitlist">
		<option name="wxDV_SINGLE" help="Single selection mode. This is the default." />
		<option name="wxDV_MULTIPLE" help="Multiple selection mode." />
		<option name="wxDV_ROW_LINES" help="Use alternating colours for rows if supported by platform and theme. Currently only supported by the native GTK and OS X implementations but not by the generic one." />
		<option name="wxDV_HORIZ_RULES" help="Display the separator lines between rows" />
		<option name="wxDV_VERT_RULES" help="Display the separator lines between columns." />
		<option name="wxDV_VARIABLE_LINE_HEIGHT" help="Allow variable line heights. This can be inefficient when displaying large number of items." />
		<option name="wxDV_NO_HEADER" help="Do not show column headers (which are shown by default)." />
	</property>
	<template name="generated_event_handlers"></template>
	<event name="OnDataViewTreeCtrlSelectionChanged" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_SELECTION_CHANGED event." />
	<event name="OnDataViewTreeCtrlItemActivated" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_ACTIVATED event. This event is triggered by double clicking an item or pressing some special key (usually 'Enter') when it is focused." />
	<event name="OnDataViewTreeCtrlItemStartEditing" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_START_EDITING event. This event can be vetoed in order to prevent editing on an item by item basis." />
	<event name="OnDataViewTreeCtrlItemEditingStarted" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EDITING_STARTED event." />
	<event name="OnDataViewTreeCtrlItemEditingDone" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EDITING_DONE event." />
	<event name="OnDataViewTreeCtrlItemCollapsing" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_COLLAPSING event." />
	<event name="OnDataViewTreeCtrlItemCollapsed" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_COLLAPSED event." />
	<event name="OnDataViewTreeCtrlItemExpanding" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EXPANDING event." />
	<event name="OnDataViewTreeCtrlItemExpanded" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EXPANDED event." />
	<event name="OnDataViewTreeCtrlItemValueChanged" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_VALUE_CHANGED event" />
	<event name="OnDataViewTreeCtrlItemContextMenu" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_CONTEXT_MENU event generated when the user right clicks inside the control. Notice that this menu is generated even if the click didn't occur on any valid item, in this case wxDataViewEvent::GetItem() simply returns an invalid item." />
	<event name="OnDataViewTreeCtrlColumnHeaderClick" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_HEADER_CLICK event." />
	<event name="OnDataViewTreeCtrlColumnHeaderRightClick" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_HEADER_RIGHT_CLICK event. Notice that currently this event is not generated in the native OS X versions of the control." />
	<event name="OnDataViewTreeCtrlColumnSorted" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_SORTED event." />
	<event name="OnDataViewTreeCtrlColumnReordered" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_REORDERED event." />
	<event name="OnDataViewTreeCtrlItemBeginDrag" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_BEGIN_DRAG event." />
	<event name="OnDataViewTreeCtrlItemDropPossible" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE event." />
	<event name="OnDataViewTreeCtrlItemDrop" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_DROP event." />
	</objectinfo>

<objectinfo class="wxDataViewListCtrl" icon="dataviewlist_ctrl.xpm" type="dataviewlistctrl" wxversion="2904" >
	<inherits class="wxControl" />
	<inherits class="wxWindow" />
	<property name="name" type="text">m_dataViewListCtrl</property>
	<property name="style" type="bitlist">
		<option name="wxDV_SINGLE" help="Single selection mode. This is the default." />
		<option name="wxDV_MULTIPLE" help="Multiple selection mode." />
		<option name="wxDV_ROW_LINES" help="Use alternating colours for rows if supported by platform and theme. Currently only supported by the native GTK and OS X implementations but not by the generic one." />
		<option name="wxDV_HORIZ_RULES" help="Display the separator lines between rows" />
		<option name="wxDV_VERT_RULES" help="Display the separator lines between columns." />
		<option name="wxDV_VARIABLE_LINE_HEIGHT" help="Allow variable line heights. This can be inefficient when displaying large number of items." />
		<option name="wxDV_NO_HEADER" help="Do not show column headers (which are shown by default)." />
	</property>
	<template name="generated_event_handlers"></template>
	<event name="OnDataViewListCtrlSelectionChanged" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_SELECTION_CHANGED event." />
	<event name="OnDataViewListCtrlItemActivated" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_ACTIVATED event. This event is triggered by double clicking an item or pressing some special key (usually 'Enter') when it is focused." />
	<event name="OnDataViewListCtrlItemStartEditing" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_START_EDITING event. This event can be vetoed in order to prevent editing on an item by item basis." />
	<event name="OnDataViewListCtrlItemEditingStarted" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EDITING_STARTED event." />
	<event name="OnDataViewListCtrlItemEditingDone" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EDITING_DONE event." />
	<event name="OnDataViewListCtrlItemCollapsing" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_COLLAPSING event." />
	<event name="OnDataViewListCtrlItemCollapsed" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_COLLAPSED event." />
	<event name="OnDataViewListCtrlItemExpanding" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EXPANDING event." />
	<event name="OnDataViewListCtrlItemExpanded" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_EXPANDED event." />
	<event name="OnDataViewListCtrlItemValueChanged" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_VALUE_CHANGED event" />
	<event name="OnDataViewListCtrlItemContextMenu" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_CONTEXT_MENU event generated when the user right clicks inside the control. Notice that this menu is generated even if the click didn't occur on any valid item, in this case wxDataViewEvent::GetItem() simply returns an invalid item." />
	<event name="OnDataViewListCtrlColumnHeaderClick" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_HEADER_CLICK event." />
	<event name="OnDataViewListCtrlColumnHeaderRightClick" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_HEADER_RIGHT_CLICK event. Notice that currently this event is not generated in the native OS X versions of the control." />
	<event name="OnDataViewListCtrlColumnSorted" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_SORTED event." />
	<event name="OnDataViewListCtrlColumnReordered" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_COLUMN_REORDERED event." />
	<event name="OnDataViewListCtrlItemBeginDrag" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_BEGIN_DRAG event." />
	<event name="OnDataViewListCtrlItemDropPossible" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE event." />
	<event name="OnDataViewListCtrlItemDrop" class="wxDataViewEvent" help="Process a wxEVT_DATAVIEW_ITEM_DROP event." />
</objectinfo>

<objectinfo class="dataViewColumn" icon="dataviewlist_column.xpm" type="dataviewcolumn" wxversion="2904" >
	<property name="name" type="text">m_dataViewColumn</property>
	<property name="label" type="wxString_i18n">Name</property>
	<property name="model_column" type="uint">0</property>
	<property name="type" type="option">
		<option name="Text" help="Appends a text column to the control and the store."/>
		<option name="Bitmap" help="Appends a column for rendering a bitmap."/>
		<option name="Date" help="Appends a column for rendering a date."/>
		<option name="Toggle" help="Appends a toggle column to the control and the store."/>
		<option name="Progress" help="Appends a progress column to the control and the store."/>
		<option name="IconText" help="Appends an icon-and-text column to the control and the store."/>
		Text
	</property>
    <property name="mode" type="option">
      <option name="wxDATAVIEW_CELL_INERT" help="The cell only displays information and cannot be manipulated or otherwise interacted with in any way."/>
      <option name="wxDATAVIEW_CELL_ACTIVATABLE" help="Indicates that the cell can be activated by clicking it or using keyboard."/>
      <option name="wxDATAVIEW_CELL_EDITABLE" help="Indicates that the user can edit the data in-place in an inline editor control that will show up when the user wants to edit the cell."/>
      wxDATAVIEW_CELL_INERT
    </property>
    <property name="width" type="int">-1</property>
    <property name="align" type="bitlist">
      <option name="wxALIGN_LEFT" help="Align the item to the left."/>
      <option name="wxALIGN_TOP" help="Align the item to the top."/>
      <option name="wxALIGN_RIGHT" help="Align the item to the right."/>
      <option name="wxALIGN_BOTTOM" help="Align the item to the bottom."/>
      <option name="wxALIGN_CENTER" help="Align the item to the center."/>
      <option name="wxALIGN_CENTER_HORIZONTAL" help="Align the item to the horizontal center."/>
      <option name="wxALIGN_CENTER_VERTICAL" help="Align the item to the vertical."/>
      wxALIGN_LEFT
    </property>
    <property name="flags" type="bitlist">
      <option name="wxDATAVIEW_COL_RESIZABLE" help="Column can be resized."/>
      <option name="wxDATAVIEW_COL_SORTABLE" help="Column can be clicked to toggle the sort order by its contents."/>
      <option name="wxDATAVIEW_COL_REORDERABLE" help="Column can be dragged to change its order."/>
      <option name="wxDATAVIEW_COL_HIDDEN" help="Column is not shown at all."/>
      wxDATAVIEW_COL_RESIZABLE
    </property>
    <property name="ellipsize" type="option">
      <option name=""/>
      <option name="wxELLIPSIZE_NONE" help="Don't ellipsize the text at all."/>
      <option name="wxELLIPSIZE_START" help="Put the ellipsis at the start of the string, if the string needs ellipsization."/>
      <option name="wxELLIPSIZE_MIDDLE" help="Put the ellipsis in the middle of the string, if the string needs ellipsization."/>
      <option name="wxELLIPSIZE_END" help="Put the ellipsis at the end of the string, if the string needs ellipsization."/>
    </property>
</objectinfo>

<objectinfo class="dataViewListColumn" icon="dataviewlist_column.xpm" type="dataviewlistcolumn" wxversion="2904" >
	<property name="name" type="text">m_dataViewListColumn</property>
	<property name="label" type="wxString_i18n">Name</property>
	<property name="type" type="option">
		<option name="Text" help="Appends a text column to the control and the store."/>
		<option name="Toggle" help="Appends a toggle column to the control and the store."/>
		<option name="Progress" help="Appends a progress column to the control and the store."/>
		<option name="IconText" help="Appends an icon-and-text column to the control and the store."/>
		Text
	</property>
    <property name="mode" type="option">
      <option name="wxDATAVIEW_CELL_INERT" help="The cell only displays information and cannot be manipulated or otherwise interacted with in any way."/>
      <option name="wxDATAVIEW_CELL_ACTIVATABLE" help="Indicates that the cell can be activated by clicking it or using keyboard."/>
      <option name="wxDATAVIEW_CELL_EDITABLE" help="Indicates that the user can edit the data in-place in an inline editor control that will show up when the user wants to edit the cell."/>
      wxDATAVIEW_CELL_INERT
    </property>
    <property name="width" type="int">-1</property>
    <property name="align" type="bitlist">
      <option name="wxALIGN_LEFT" help="Align the item to the left."/>
      <option name="wxALIGN_TOP" help="Align the item to the top."/>
      <option name="wxALIGN_RIGHT" help="Align the item to the right."/>
      <option name="wxALIGN_BOTTOM" help="Align the item to the bottom."/>
      <option name="wxALIGN_CENTER" help="Align the item to the center."/>
      <option name="wxALIGN_CENTER_HORIZONTAL" help="Align the item to the horizontal center."/>
      <option name="wxALIGN_CENTER_VERTICAL" help="Align the item to the vertical."/>
      wxALIGN_LEFT
    </property>
    <property name="flags" type="bitlist">
      <option name="wxDATAVIEW_COL_RESIZABLE" help="Column can be resized."/>
      <option name="wxDATAVIEW_COL_SORTABLE" help="Column can be clicked to toggle the sort order by its contents."/>
      <option name="wxDATAVIEW_COL_REORDERABLE" help="Column can be dragged to change its order."/>
      <option name="wxDATAVIEW_COL_HIDDEN" help="Column is not shown at all."/>
      wxDATAVIEW_COL_RESIZABLE
    </property>
    <property name="ellipsize" type="option">
      <option name=""/>
      <option name="wxELLIPSIZE_NONE" help="Don't ellipsize the text at all."/>
      <option name="wxELLIPSIZE_START" help="Put the ellipsis at the start of the string, if the string needs ellipsization."/>
      <option name="wxELLIPSIZE_MIDDLE" help="Put the ellipsis in the middle of the string, if the string needs ellipsization."/>
      <option name="wxELLIPSIZE_END" help="Put the ellipsis at the end of the string, if the string needs ellipsization."/>
    </property>
</objectinfo>

<objectinfo class="wxPropertyGrid" icon="propgrid.xpm" type="propgrid" startgroup="1" wxversion="2904" >
	<inherits class="wxWindow" />
	<inherits class="AUI" /> <property name="bitmap" type="bitmap" help="This is the bitmap shown in the default state, it must be always valid while all the other bitmaps are optional and don't have to be set."/>
	<property name="style" type="bitlist">
		<option name="wxPG_DEFAULT_STYLE"			help="Combines various styles."/>
		<option name="wxPG_AUTO_SORT" 				help="This will cause Sort() automatically after an item is added. When inserting a lot of items in this mode, it may make sense to use Freeze() before operations and Thaw() afterwards to increase performance." />
		<option name="wxPG_HIDE_CATEGORIES"			help="Categories are not initially shown (even if added)."/>
		<option name="wxPG_ALPHABETIC_MODE"			help="This style combines non-categoric mode and automatic sorting."/>
		<option name="wxPG_BOLD_MODIFIED"			help="Modified values are shown in bold font."/>
		<option name="wxPG_SPLITTER_AUTO_CENTER"	help="When wxPropertyGrid is resized, splitter moves to the center. This behaviour stops once the user manually moves the splitter."/>
		<option name="wxPG_TOOLTIPS"				help="Display tooltips for cell text that cannot be shown completely. If wxUSE_TOOLTIPS is 0, then this doesn't have any effect."/>
		<option name="wxPG_HIDE_MARGIN"				help="Disables margin and hides all expand/collapse buttons that would appear outside the margin (for sub-properties). Toggling this style automatically expands all collapsed items."/>
		<option name="wxPG_STATIC_SPLITTER" 		help="This style prevents user from moving the splitter."/>
		<option name="wxPG_STATIC_LAYOUT"			help="Combination of other styles that make it impossible for user to modify the layout."/>
		<option name="wxPG_LIMITED_EDITING"			help="Disables wxTextCtrl based editors for properties which can be edited in another way."/>
		<option name="wxTAB_TRAVERSAL" help="wxTAB_TRAVERSAL allows using Tab/Shift-Tab to travel between properties in grid. Travelling forwards from last property will navigate to the next control, and backwards from first will navigate to the previous one."/>
		wxPG_DEFAULT_STYLE
	</property>
	<property name="extra_style" type="bitlist">
		<option name="wxPG_EX_INIT_NOCAT"			help="Speeds up switching to wxPG_HIDE_CATEGORIES mode. Initially, if wxPG_HIDE_CATEGORIES is not defined, the non-categorized data storage is not activated, and switching the mode first time becomes somewhat slower. wxPG_EX_INIT_NOCAT activates the non-categorized data storage right away. IMPORTANT NOTE: If you do plan not switching to non-categoric mode, or if you don't plan to use categories at all, then using this style will result in waste of resources."/>
		<option name="wxPG_EX_HELP_AS_TOOLTIPS"		help="Show property help strings as tool tips instead as text on the status bar."/>
		<option name="wxPG_EX_NATIVE_DOUBLE_BUFFERING"		help="Allows relying on native double-buffering."/>
		<option name="wxPG_EX_AUTO_UNSPECIFIED_VALUES"		help="Set this style to let user have ability to set values of properties to unspecified state. Same as setting wxPG_PROP_AUTO_UNSPECIFIED for all properties."/>
		<option name="wxPG_EX_WRITEONLY_BUILTIN_ATTRIBUTES"		help="If this style is used, built-in attributes (such as wxPG_FLOAT_PRECISION and wxPG_STRING_PASSWORD) are not stored into property's attribute storage (thus they are not readable). Note that this option is global, and applies to all wxPG property containers."/>
		<option name="wxPG_EX_MULTIPLE_SELECTION"		help="Allows multiple properties to be selected by user (by pressing SHIFT when clicking on a property, or by dragging with left mouse button down)."/>
		<option name="wxPG_EX_ENABLE_TLP_TRACKING"		help="This enables top-level window tracking which allows wxPropertyGrid to notify the application of last-minute property value changes by user. This style is not enabled by default because it may cause crashes when wxPropertyGrid is used in with wxAUI or similar system. If you are not in fact using any system that may change wxPropertyGrid's top-level parent window on its own, then you are recommended to enable this style."/>
	</property>
	<property name="name" type="text">m_propertyGrid</property>
	<property name="include_advanced" type="bool" help="Include Advanced Properties">1</property>
	<event name="OnPropertyGridChanging" class="wxPropertyGridEvent" help="Property value is about to be changed. Use wxPropertyGridEvent::GetValue() to take a peek at the pending value, and wxPropertyGridEvent::Veto() to prevent change from taking place, if necessary." />
	<event name="OnPropertyGridChanged"  class="wxPropertyGridEvent" help="Property value is modified." />
</objectinfo>

<objectinfo class="wxPropertyGridManager" icon="propgridman.xpm" type="propgridman" wxversion="2904">
	<inherits class="wxWindow" />
	<inherits class="AUI" />
	<property name="style" type="bitlist">
		<option name="wxPGMAN_DEFAULT_STYLE"	help="Combines various styles."/>
		<option name="wxPG_AUTO_SORT" 				help="This will cause Sort() automatically after an item is added. When inserting a lot of items in this mode, it may make sense to use Freeze() before operations and Thaw() afterwards to increase performance." />
		<option name="wxPG_HIDE_CATEGORIES"			help="Categories are not initially shown (even if added)."/>
		<option name="wxPG_ALPHABETIC_MODE"			help="This style combines non-categoric mode and automatic sorting."/>
		<option name="wxPG_BOLD_MODIFIED"			help="Modified values are shown in bold font."/>
		<option name="wxPG_SPLITTER_AUTO_CENTER"	help="When wxPropertyGrid is resized, splitter moves to the center. This behaviour stops once the user manually moves the splitter."/>
		<option name="wxPG_TOOLTIPS"				help="Display tooltips for cell text that cannot be shown completely. If wxUSE_TOOLTIPS is 0, then this doesn't have any effect."/>
		<option name="wxPG_HIDE_MARGIN"				help="Disables margin and hides all expand/collapse buttons that would appear outside the margin (for sub-properties). Toggling this style automatically expands all collapsed items."/>
		<option name="wxPG_STATIC_SPLITTER" 		help="This style prevents user from moving the splitter."/>
		<option name="wxPG_STATIC_LAYOUT"			help="Combination of other styles that make it impossible for user to modify the layout."/>
		<option name="wxPG_LIMITED_EDITING"			help="Disables wxTextCtrl based editors for properties which can be edited in another way."/>
		<option name="wxTAB_TRAVERSAL" help="wxTAB_TRAVERSAL allows using Tab/Shift-Tab to travel between properties in grid. Travelling forwards from last property will navigate to the next control, and backwards from first will navigate to the previous one."/>
		<option name="wxPG_COMPACTOR" help="Show compactor button that toggles hidden state of low-priority properties."/>
		<option name="wxPG_TOOLBAR"				help="Show toolbar for mode and page selection."/>
		<option name="wxPG_DESCRIPTION"			help="Show adjustable text box showing description or help text, if available, for currently selected property."/>
		<option name="wxPG_NO_INTERNAL_BORDER"	help="Don't show an internal border around the property grid. Recommended if you use a header."/>
		wxPGMAN_DEFAULT_STYLE
	</property>
	<property name="extra_style" type="bitlist">
		<option name="wxPG_EX_INIT_NOCAT"		help="Speeds up switching to wxPG_HIDE_CATEGORIES mode. Initially, if wxPG_HIDE_CATEGORIES is not defined, the non-categorized data storage is not activated, and switching the mode first time becomes somewhat slower. wxPG_EX_INIT_NOCAT activates the non-categorized data storage right away. IMPORTANT NOTE: If you do plan not switching to non-categoric mode, or if you don't plan to use categories at all, then using this style will result in waste of resources."/>
		<option name="wxPG_EX_NO_FLAT_TOOLBAR"	help="Extended window style that sets wxPropertyGridManager toolbar to not use flat style."/>
		<option name="wxPG_EX_MODE_BUTTONS"		help="Shows alphabetic/categoric mode buttons from toolbar."/>
		<option name="wxPG_EX_HELP_AS_TOOLTIPS"		help="Show property help strings as tool tips instead as text on the status bar."/>
		<option name="wxPG_EX_NATIVE_DOUBLE_BUFFERING"		help="Allows relying on native double-buffering."/>
		<option name="wxPG_EX_AUTO_UNSPECIFIED_VALUES"		help="Set this style to let user have ability to set values of properties to unspecified state. Same as setting wxPG_PROP_AUTO_UNSPECIFIED for all properties."/>
		<option name="wxPG_EX_WRITEONLY_BUILTIN_ATTRIBUTES"		help="If this style is used, built-in attributes (such as wxPG_FLOAT_PRECISION and wxPG_STRING_PASSWORD) are not stored into property's attribute storage (thus they are not readable). Note that this option is global, and applies to all wxPG property containers."/>
		<option name="wxPG_EX_HIDE_PAGE_BUTTONS"		help="Hides page selection buttons from tool bar."/>
		<option name="wxPG_EX_MULTIPLE_SELECTION"		help="Allows multiple properties to be selected by user (by pressing SHIFT when clicking on a property, or by dragging with left mouse button down)."/>
		<option name="wxPG_EX_ENABLE_TLP_TRACKING"		help="This enables top-level window tracking which allows wxPropertyGrid to notify the application of last-minute property value changes by user. This style is not enabled by default because it may cause crashes when wxPropertyGrid is used in with wxAUI or similar system. If you are not in fact using any system that may change wxPropertyGrid's top-level parent window on its own, then you are recommended to enable this style."/>
		<option name="wxPG_EX_NO_TOOLBAR_DIVIDER"		help="Don't show divider above toolbar, on Windows."/>
		<option name="wxPG_EX_TOOLBAR_SEPARATOR"		help="Show a separator below the toolbar."/>
		wxPG_EX_MODE_BUTTONS
	</property>
	<property name="name" type="text">m_propertyGridManager</property>
	<property name="include_advanced" type="bool" help="Include Advanced Properties">1</property>
	<event name="OnPropertyGridChanging" class="wxPropertyGridEvent" help="Property value is about to be changed. Use wxPropertyGridEvent::GetValue() to take a peek at the pending value, and wxPropertyGridEvent::Veto() to prevent change from taking place, if necessary." />
	<event name="OnPropertyGridChanged"  class="wxPropertyGridEvent" help="Property value is modified." />
</objectinfo>

<objectinfo class="propGridPage" icon="propgridpage.xpm" type="propgridpage" wxversion="2904">
	<property name="name" type="text" help="Instance name.">m_propertyGridPage</property>
	<property name="label" type="wxString_i18n" help="Label shown as a tooltip of the manager's tool button.">Page</property>
	<property name="bitmap" type="bitmap" help="Bitmap shown in the property manager's header."/>
</objectinfo>

<objectinfo class="propGridItem" icon="propgriditem.xpm" type="propgriditem" wxversion="2904">
	<property name="name" type="text" help="Instance name and an internal name of the property item.">m_propertyGridItem</property>
	<property name="label" type="wxString_i18n" help="Label shown in parent property grid/page.">Name</property>
	<property name="type" type="option" help="Type of the property item.">
		<option name="Category" help="Append properties category."/>
		<option name="Bool" help="Append Boolean property to the parent property grid (page)."/>
		<option name="Colour" help="Append Colour property to the parent property grid (page)."/>
		<option name="Cursor" help="Append Cursor property to the parent property grid (page)."/>
		<option name="Date" help="Append Date property to the parent property grid (page)."/>
		<option name="Dir" help="Append Dir property to the parent property grid (page)."/>
		<option name="EditEnum" help="Append EditEnum property to the parent property grid (page)."/>
		<option name="Enum" help="Append Enum property to the parent property grid (page)."/>
		<option name="File" help="Append File property to the parent property grid (page)."/>
		<option name="Flags" help="Append Flags property to the parent property grid (page)."/>
		<option name="Float" help="Append Float property to the parent property grid (page)."/>
		<option name="Font" help="Append Font property to the parent property grid (page)."/>
		<option name="ImageFile" help="Append ImageFile property to the parent property grid (page)."/>
		<option name="Int" help="Append Int property to the parent property grid (page)."/>
		<option name="LongString" help="Append LongString property to the parent property grid (page)."/>
		<option name="MultiChoice" help="Append MultiChoice property to the parent property grid (page)."/>
		<option name="String" help="Append String property to the parent property grid (page)."/>
		<option name="SystemColour" help="Append SystemColour property to the parent property grid (page)."/>
		<option name="UInt" help="Append UInt property to the parent property grid (page)."/>
		String
	</property>
	<property name="help" type="wxString_i18n" help="Property item's name."></property>
</objectinfo>

</package>
