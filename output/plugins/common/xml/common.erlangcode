<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--
wxFormBuilder - A Visual Dialog Editor for wxWidgets.
Copyright (C) 2005 José Antonio Hurtado

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Written by
  José Antonio Hurtado - joseantonio.hurtado@gmail.com
  Juan Antonio Ortega  - jortegalalmolda@gmail.com

Erlang code generation writen by
  Micheus Vieira - micheus@gmail.com
-->
<codegen language="Erlang">

    <templates class="wxButton">
        <template name="construction">
            $name = #class:new(#wxparent $name, $id, [#ifnotnull $label
                                                      @{{label,$label }, @}
                                                      #ifnotnull $pos
                                                      @{{pos,$pos }, @}
                                                      #ifnotnull $size
                                                      @{{size,$size }, @}
                                                      #ifnotnull $style
                                                      @{{style,$style } @} ]),
        </template>
        <template name="settings">
            #ifnotequal $default "0"
            @{ #class:setDefault($name) @}

            #ifequal $auth_needed "1"
            @{ %% #class:setAuthNeeded($name) is not supported by Erlang @}

            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
        <template name="evt_connect_OnButtonClick">#class:connect($name, command_button_clicked, #option),</template>
    </templates>

    <templates class="wxBitmapButton">
        <template name="construction">
            <!-- $bitmap property is missed in wxFormBuilder -->
            $name = #class:new(#wxparent $name, $id, wx:null(), [#ifnotnull $pos
                                                                 @{{pos,$pos }, @}
                                                                 #ifnotnull $size
                                                                 @{{size,$size }, @}
                                                                 {style,?wxBU_AUTODRAW #ifnotnull $style @{ + $style @}}]), @}
        </template>
        <template name="settings">
            #ifnotequal $default "0"
            @{ #class:setDefault($name) @}

            #ifequal $auth_needed "1"
            @{ %% #class:setAuthNeeded($name) is not supported by Erlang @}

            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}

            #ifnotequal $default "0"
            @{ #class:setDefault($name), @}

            #ifnotnull $bitmap
            @{ #class:setBitmapLabel($name, $bitmap), @}

            #ifnotnull $disabled
            @{ #class:setBitmapDisabled($name, $disabled), @}

            #ifnotnull $pressed
            @{ #class:setBitmapSelected($name, $pressed), @}

            #ifnotnull $focus
            @{ #class:setBitmapFocus($name, $focus), @}
        </template>
    </templates>

    <templates class="wxTextCtrl">
        <template name="construction">
            $name = #class:new(#wxparent $name, $id, [{value,$value }, #ifnotnull $pos
                                                                        @{{pos,$pos }, @}
                                                                        #ifnotnull $size
                                                                        @{{size,$size }, @}
                                                                        #ifnotnull $style
                                                                        @{{style,$style #ifnotnull $window_style @{ | $window_style @} } @}
                                                                        #ifnull $style
                                                                        @{ #ifnotnull $window_style
                                                                           @{{style,$window_style }@} @}]),
        </template>
        <template name="settings">
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
            #ifnotnull $maxlength
            @{
                #ifnotequal $maxlength "0"
                @{ wxTextCtrl:setMaxLength($name, $maxlength), @}
            @}
        </template>
        <template name="evt_connect_OnText">#class:connect($name, command_text_updated, #option),</template>
        <template name="evt_connect_OnTextEnter">#class:connect($name, command_text_enter, #option),</template>
        <template name="evt_connect_OnTextURL">%%  event #class:wxEVT_COMMAND_TEXT_URL isn't currently supported by wx in Erlang</template>
        <template name="evt_connect_OnTextMaxLen">%%  event #class:wxEVT_COMMAND_TEXT_MAXLEN isn't currently supported by wx in Erlang</template>
    </templates>

    <templates class="wxStaticText">
        <template name="construction">
            $name = #class:new(#wxparent $name, $id, $label, [#ifnotnull $pos
                                                              @{{pos,$pos }, @}
                                                              #ifnotnull $size
                                                              @{{size,$size }, @}
                                                              #ifnotnull $style
                                                              @{{style,$style #ifnotnull $window_style @{ | $window_style @}} @}
                                                              #ifnull $style
                                                              @{ #ifnotnull $window_style
                                                                 @{{style,$window_style }, @}@}]),
        </template>
        <template name="settings">
            #ifequal $markup "1"
            @{ %% wxControl:setLabelMarkup isn't currently supported by wx in Erlang @}
            #ifnotequal $wrap "-1"
            @{ #class:wrap($name,$wrap), @}
        </template>
    </templates>

    <templates class="wxCheckBox">
        <template name="construction">
            $name = #class:new(#wxparent $name, $id, $label, [#ifnotnull $pos
                                                              @{{pos,$pos }, @}
                                                              #ifnotnull $size
                                                              @{{size,$size }, @}
                                                              #ifnotnull $style
                                                              @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                              #ifnull $style
                                                              @{ #ifnotnull $window_style
                                                                 @{{style,$window_style }@}@}]),
        </template>
        <template name="settings">
            #ifnotequal $checked "0"
            @{ #class:setValue($name, true), @}

            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
        <template name="evt_connect_OnCheckBox">#class:connect($name, command_checkbox_clicked, #option),</template>
    </templates>

    <templates class="wxComboBox">
        <template name="construction">
            #ifnotnull $choices
            @{ $name #append _Opts = [$choices], #nl @}
            $name = #class:new(#wxparent $name, $id, [#ifnotnull $value
                                                      @{{value,$value }, @}
                                                      #ifnotnull $pos
                                                      @{{pos,$pos }, @}
                                                      #ifnotnull $size
                                                      @{{size,$size }, @}
                                                      #ifnotnull $choices
                                                      @{{choices, $name #append _Opts}, @}
                                                      #ifnotnull $style
                                                      @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                      #ifnull $style
                                                      @{ #ifnotnull $window_style
                                                         @{{style,$window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
        <template name="settings">
            #ifnotequal $selection "-1"
            @{ #class:setSelection($name, $selection), @}
        </template>
        <template name="evt_connect_OnCombobox">#class:connect($name, command_combobox_selected, #option),</template>
        <template name="evt_connect_OnText">#class:connect($name, command_text_updated, #option),</template>
        <template name="evt_connect_OnTextEnter">#class:connect($name, command_text_enter, #option),</template>
    </templates>

    <templates class="wxBitmapComboBox">
        <template name="construction">
            #ifnotnull $choices
            @{ $name #append _Opts = [$choices], #nl @}
            $name = #class:new(#wxparent $name, $id, [#ifnotnull $value
                                                      @{{value,$value }, @}
                                                      #ifnotnull $pos
                                                      @{{pos,$pos }, @}
                                                      #ifnotnull $size
                                                      @{{size,$size }, @}
                                                      #ifnotnull $choices
                                                      @{{choices, $name #append _Opts}, @}
                                                      #ifnotnull $style
                                                      @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                      #ifnull $style
                                                      @{ #ifnotnull $window_style
                                                         @{{style,$window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
            #foreach $choices
            @{ %% #class:append($name, #pred, wxBitmap:new()) @}
        </template>
        <template name="settings">
            #ifnotequal $selection "-1"
            @{#class:setSelection($name, $selection)@}
        </template>
        <template name="evt_connect_OnCombobox">#class:connect($name, command_combobox_selected, #option),</template>
        <template name="evt_connect_OnText">#class:connect($name, command_text_updated, #option),</template>
        <template name="evt_connect_OnTextEnter">#class:connect($name, command_text_enter, #option),</template>
    </templates>

    <templates class="wxListBox">
        <template name="construction">
            #ifnotnull $choices
            @{ $name #append _Opts = [$choices], #nl @}
            $name = #class:new(#wxparent $name, $id, [#ifnotnull $pos
                                                      @{{pos,$pos }, @}
                                                      #ifnotnull $size
                                                      @{{size,$size }, @}
                                                      #ifnotnull $choices
                                                      @{{choices, $name #append _Opts}, @}
                                                      #ifnotnull $style
                                                      @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                      #ifnull $style
                                                      @{ #ifnotnull $window_style
                                                         @{{style,$window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
        <template name="evt_connect_OnListBox">#class:connect($name, command_listbox_selected, #option),</template>
        <template name="evt_connect_OnListBoxDClick">#class:connect($name, command_listbox_doubleclicked, #option),</template>
    </templates>

    <templates class="wxRadioBox">
        <template name="construction">
            #ifnotnull $choices
            @{ $name #append _Opts = [$choices], #nl @}
            $name = #class:new(#wxparent $name, $id, $label, $pos, $size, #ifnotnull $choices
                                                                          @{$name #append _Opts @}
                                                                          #ifnull $choices
                                                                          @{[]@},
                                                                          [#ifnotnull $majorDimension
                                                                          @{{majorDim,$majorDimension }, @}
                                                                          #ifnotnull $style
                                                                          @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                                          #ifnull $style
                                                                          @{ #ifnotnull $window_style
                                                                             @{{style,$window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
            #ifnotequal $selection "-1"
            @{ #class:setSelection($name, $selection), @}
        </template>
        <template name="evt_connect_OnRadioBox">#class:connect($name, command_radiobox_selected, #option),</template>
    </templates>

    <templates class="wxRadioButton">
        <template name="construction">
            $name = #class:new(#wxparent $name, $id, $label, [#ifnotnull $pos
                                                              @{{pos,$pos }, @}
                                                              #ifnotnull $size
                                                              @{{size,$size }, @}
                                                              #ifnotnull $style
                                                              @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                              #ifnull $style
                                                              @{ #ifnotnull $window_style
                                                                 @{{style,$window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
        <template name="settings">
            #ifnotequal $value "0"
            @{ #class:setValue($name, true) @}
        </template>
        <template name="evt_connect_OnRadioButton">#class:connect($name, command_radiobutton_selected, #option),</template>
    </templates>

    <templates class="wxStaticBitmap">
        <template name="construction">
            $name = #class:new(#wxparent $name, $id, $bitmap, [#ifnotnull $pos
                                                               @{{pos,$pos }, @}
                                                               #ifnotnull $size
                                                               @{{size,$size }, @}
                                                               #ifnotnull $window_style
                                                               @{{style,$window_style } @}]),
        </template>
    </templates>

    <templates class="wxAnimationCtrl">
        <template name="construction">
            $name = #class:new(#wxparent $name, $id, wxAnimation:new(), [{pos,$pos }, {size,$size }, {style,$style #ifnotnull $window_style @{+$window_style @} }]),
            #ifnotnull $animation
            @{ %% wxAnimationCtrl:loadFile($name, $animation), @}
        </template>
        <template name="settings">
            #ifnotnull $inactive_bitmap
            @{ %% wxAnimationCtrl:setInactiveBitmap($name, $inactive_bitmap) @}
            #ifequal $play "1"
            @{ %% wxAnimationCtrl:play($name) @}
        </template>
    </templates>

    <templates class="wxStaticLine">
        <template name="construction">
            $name = #class:new(#wxparent $name, [#ifnotnull $id
                                                 @{{id,$id }, @}
                                                 #ifnotnull $pos
                                                 @{{pos,$pos }, @}
                                                 #ifnotnull $size
                                                 @{{size,$size }, @}
                                                 #ifnotnull $style
                                                 @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                 #ifnull $style
                                                 @{ #ifnotnull $window_style
                                                    @{{style,$window_style } @}@}]),
        </template>
    </templates>

    <templates class="wxListCtrl">
        <template name="construction">
            $name = #class:new(#wxparent $name, [#ifnotnull $id
                                                 @{{winid,$id }, @}
                                                 #ifnotnull $pos
                                                 @{{pos,$pos }, @}
                                                 #ifnotnull $size
                                                 @{{size,$size }, @}
                                                 #ifnotnull $style
                                                 @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                 #ifnull $style
                                                 @{ #ifnotnull $window_style
                                                    @{{style,$window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
        <template name="evt_connect_OnListBeginDrag">#class:connect($name, command_list_begin_drag, #option),</template>
        <template name="evt_connect_OnListBeginRDrag">#class:connect($name, command_list_begin_rdrag, #option),</template>
        <template name="evt_connect_OnListBeginLabelEdit">#class:connect($name, command_list_begin_label_edit, #option),</template>
        <template name="evt_connect_OnListEndLabelEdit">#class:connect($name, command_list_end_label_edit, #option),</template>
        <template name="evt_connect_OnListDeleteItem">#class:connect($name, command_list_delete_item, #option),</template>
        <template name="evt_connect_OnListDeleteAllItems">#class:connect($name, command_list_delete_all_items, #option),</template>
        <template name="evt_connect_OnListItemSelected">#class:connect($name, command_list_item_selected, #option),</template>
        <template name="evt_connect_OnListItemDeselected">#class:connect($name, command_list_item_deselected, #option),</template>
        <template name="evt_connect_OnListItemActivated">#class:connect($name, command_list_item_activated, #option),</template>
        <template name="evt_connect_OnListItemFocused">#class:connect($name, command_list_item_focused, #option),</template>
        <template name="evt_connect_OnListItemMiddleClick">#class:connect($name, command_list_item_middle_click, #option),</template>
        <template name="evt_connect_OnListItemRightClick">#class:connect($name, command_list_item_right_click, #option),</template>
        <template name="evt_connect_OnListKeyDown">#class:connect($name, command_list_key_down, #option),</template>
        <template name="evt_connect_OnListInsertItem">#class:connect($name, command_list_insert_item, #option),</template>
        <template name="evt_connect_OnListColClick">#class:connect($name, command_list_col_click, #option),</template>
        <template name="evt_connect_OnListColRightClick">#class:connect($name, command_list_col_right_click, #option),</template>
        <template name="evt_connect_OnListColBeginDrag">#class:connect($name, command_list_col_begin_drag, #option),</template>
        <template name="evt_connect_OnListColDragging">#class:connect($name, command_list_col_dragging, #option),</template>
        <template name="evt_connect_OnListColEndDrag">#class:connect($name, command_list_col_end_drag, #option),</template>
        <template name="evt_connect_OnListCacheHint">#class:connect($name, command_list_cache_hint, #option),</template>
    </templates>

    <templates class="wxChoice">
        <template name="construction">
            #ifnotnull $choices
            @{ $name #append _Opts = [$choices], #nl @}
            $name = #class:new(#wxparent $name, $id, [#ifnotnull $pos
                                                      @{{pos,$pos }, @}
                                                      #ifnotnull $size
                                                      @{{size,$size }, @}
                                                      #ifnotnull $choices
                                                      @{{choices, $name #append _Opts}, @}
                                                      #ifnotnull $style
                                                      @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                      #ifnull $style
                                                      @{ #ifnotnull $window_style
                                                         @{{style,$window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
        <template name="settings">
            #class:setSelection($name, $selection),
        </template>
        <template name="evt_connect_OnChoice">#class:connect($name, command_choice_selected, #option),</template>
    </templates>

    <templates class="wxGauge">
        <template name="construction">
            $name = #class:new(#wxparent $name, $id, $range, [#ifnotnull $pos
                                                              @{{pos,$pos }, @}
                                                              #ifnotnull $size
                                                              @{{size,$size }, @}
                                                              #ifnotnull $style
                                                              @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                              #ifnull $style
                                                              @{ #ifnotnull $window_style
                                                                 @{{style,$window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
        <template name="settings">
            #ifnotnull $value
            @{ #class:setValue($name, $value), @}
        </template>
    </templates>

    <templates class="wxSlider">
        <template name="construction">
            $name = #class:new(#wxparent $name, $id, $value, $minValue, $maxValue, [#ifnotnull $pos
                                                                                    @{{pos,$pos }, @}
                                                                                    #ifnotnull $size
                                                                                    @{{size,$size }, @}
                                                                                    #ifnotnull $style
                                                                                    @{{style,$style #ifnotnull $window_style @{ | $window_style @}}@}
                                                                                    #ifnull $style
                                                                                    @{ #ifnotnull $window_style
                                                                                       @{{style,$window_style } @}@}]),
            #ifnotequal $validator_type "wxDefaultValidator"
            @{ %% Validator is not implemented for Erlang code generator @}
        </template>
        <template name="evt_connect_OnScroll">
            #class:connect($name, scroll_top, #option), #nl
            #class:connect($name, scroll_bottom, #option), #nl
            #class:connect($name, scroll_lineup, #option), #nl
            #class:connect($name, scroll_linedown, #option), #nl
            #class:connect($name, scroll_pageup, #option), #nl
            #class:connect($name, scroll_pagedown, #option), #nl
            #class:connect($name, scroll_thumbtrack, #option), #nl
            #class:connect($name, scroll_thumbrelease, #option), #nl
            #class:connect($name, scroll_changed, #option),
        </template>
        <template name="evt_connect_OnScrollTop">#class:connect($name, scroll_top, #option),</template>
        <template name="evt_connect_OnScrollBottom">#class:connect($name, scroll_bottom, #option),</template>
        <template name="evt_connect_OnScrollLineUp">#class:connect($name, scroll_lineup, #option),</template>
        <template name="evt_connect_OnScrollLineDown">#class:connect($name, scroll_linedown, #option),</template>
        <template name="evt_connect_OnScrollPageUp">#class:connect($name, scroll_pageup, #option),</template>
        <template name="evt_connect_OnScrollPageDown">#class:connect($name, scroll_pagedown, #option),</template>
        <template name="evt_connect_OnScrollThumbTrack">#class:connect($name, scroll_thumbtrack, #option),</template>
        <template name="evt_connect_OnScrollThumbRelease">#class:connect($name, scroll_thumbrelease, #option),</template>
        <template name="evt_connect_OnScrollChanged">#class:connect($name, scroll_changed, #option),</template>
        <template name="evt_connect_OnCommandScroll">
            #class:connect($name, scroll_top, #option), #nl
            #class:connect($name, scroll_bottom, #option), #nl
            #class:connect($name, scroll_lineup, #option), #nl
            #class:connect($name, scroll_linedown, #option), #nl
            #class:connect($name, scroll_pageup, #option), #nl
            #class:connect($name, scroll_pagedown, #option), #nl
            #class:connect($name, scroll_thumbtrack, #option), #nl
            #class:connect($name, scroll_thumbrelease, #option), #nl
            #class:connect($name, scroll_changed, #option),
        </template>
        <template name="evt_connect_OnCommandScrollTop">#class:connect($name, scroll_top, #option),</template>
        <template name="evt_connect_OnCommandScrollBottom">#class:connect($name, scroll_bottom, #option),</template>
        <template name="evt_connect_OnCommandScrollLineUp">#class:connect($name, scroll_lineup, #option),</template>
        <template name="evt_connect_OnCommandScrollLineDown">#class:connect($name, scroll_linedown, #option),</template>
        <template name="evt_connect_OnCommandScrollPageUp">#class:connect($name, scroll_pageup, #option),</template>
        <template name="evt_connect_OnCommandScrollPageDown">#class:connect($name, scroll_pagedown, #option),</template>
        <template name="evt_connect_OnCommandScrollThumbTrack">#class:connect($name, scroll_thumbtrack, #option),</template>
        <template name="evt_connect_OnCommandScrollThumbRelease">#class:connect($name, scroll_thumbrelease, #option),</template>
        <template name="evt_connect_OnCommandScrollChanged">#class:connect($name, scroll_changed, #option),</template>
        <template name="evt_connect_OnSlider">%%  event #class:wxEVT_SLIDER isn't currently supported by wx in Erlang</template>
    </templates>

</codegen>
